name: Publish

on:
  push:
    branches: [ main ]
    tags: [ v* ]

permissions:
  contents: read

jobs:
  publish-artifacts:
    name: Publish artifacts to Sonatype
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Cache Coursier cache
        uses: coursier/cache-action@v6.4.0

      - name: Set up JDK 8
        uses: coursier/setup-action@v1.3.0
        with:
          jvm: adopt:1.8

      - name: Install graphviz
        run: sudo apt-get install -y graphviz

      - name: Publish Artifacts to Sonatype / Maven
        run: |
          mv .jvmopts-ghactions .jvmopts
          sbt ci-release
        env:
          CI_SONATYPE_RELEASE: "; sonatypePrepare; sonatypeBundleUpload; sonatypeClose"
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

  publish-docs:
    name: Publish documentation
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Cache Coursier cache
        uses: coursier/cache-action@v6.4.0

      - name: Set up JDK 11
        uses: coursier/setup-action@v1.3.0
        with:
          jvm: adopt:11

      - name: Publish Documentation
        run: |
          mv .jvmopts-ghactions .jvmopts
          eval "$(ssh-agent -s)" && echo $SCP_SECRET | base64 -d > /tmp/id_rsa && chmod 600 /tmp/id_rsa && ssh-add /tmp/id_rsa && sbt -Dakka.genjavadoc.enabled=true publishRsync
        env:
          SCP_SECRET: ${{ secrets.SCP_SECRET }}
